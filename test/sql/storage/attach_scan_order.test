# name: test/sql/storage/attach_scan_order.test
# description: Validate BigQuery ATTACH-based scans respect projection ordering, filtering, and legacy mode
# group: [storage]

require bigquery

require-env BQ_TEST_PROJECT

require-env BQ_TEST_DATASET

statement ok
FROM bigquery_execute('${BQ_TEST_PROJECT}', '
    CREATE OR REPLACE TABLE `${BQ_TEST_PROJECT}.${BQ_TEST_DATASET}.function_scan_test` AS
    SELECT 1 AS a, 2 AS b, "alpha" AS c
    UNION ALL
    SELECT 3 AS a, 4 AS b, "beta" AS c
');

statement ok
ATTACH 'project=${BQ_TEST_PROJECT}' AS bq (TYPE bigquery);

# Default (Arrow) path through attached catalog
query III
SELECT a, b, c FROM bq.${BQ_TEST_DATASET}.function_scan_test ORDER BY a;
----
1	2	alpha
3	4	beta

query III
SELECT c, a, b FROM bq.${BQ_TEST_DATASET}.function_scan_test ORDER BY a;
----
alpha	1	2
beta	3	4

query I
SELECT b FROM bq.${BQ_TEST_DATASET}.function_scan_test ORDER BY b;
----
2
4

query II
SELECT a AS first_a, a AS second_a FROM bq.${BQ_TEST_DATASET}.function_scan_test ORDER BY a;
----
1	1
3	3

query I
SELECT COUNT(*) FROM bq.${BQ_TEST_DATASET}.function_scan_test;
----
2

query II
SELECT a, c FROM bq.${BQ_TEST_DATASET}.function_scan_test WHERE b = 4;
----
3	beta

statement ok
SET bq_use_legacy_scan = true;

# Legacy mode should match Arrow behaviour for attached catalog reads
query III
SELECT a, b, c FROM bq.${BQ_TEST_DATASET}.function_scan_test ORDER BY a;
----
1	2	alpha
3	4	beta

query III
SELECT c, a, b FROM bq.${BQ_TEST_DATASET}.function_scan_test ORDER BY a;
----
alpha	1	2
beta	3	4

query I
SELECT b FROM bq.${BQ_TEST_DATASET}.function_scan_test ORDER BY b;
----
2
4

query II
SELECT a AS first_a, a AS second_a FROM bq.${BQ_TEST_DATASET}.function_scan_test ORDER BY a;
----
1	1
3	3

query I
SELECT COUNT(*) FROM bq.${BQ_TEST_DATASET}.function_scan_test;
----
2

query II
SELECT a, c FROM bq.${BQ_TEST_DATASET}.function_scan_test WHERE b = 4;
----
3	beta

statement ok
SET bq_use_legacy_scan = false;

statement ok
DETACH bq;

statement ok
FROM bigquery_execute('${BQ_TEST_PROJECT}', 'DROP TABLE `${BQ_TEST_DATASET}.function_scan_test`');
