# name: test/sql/bigquery/function_bigquery_query_types.test
# description: Tests the bigquery_query(...) function with complex result types
# group: [bigquery]

require bigquery

require-env BQ_TEST_PROJECT

require-env BQ_TEST_DATASET

statement ok
ATTACH 'project=${BQ_TEST_PROJECT} dataset=${BQ_TEST_DATASET}' AS bq (TYPE bigquery);

query I
SELECT * FROM bigquery_query('bq', '
	SELECT * FROM UNNEST([
		STRUCT(STRUCT(2 AS Order_Id, [1, 2] AS Item_Name) as holder),
		STRUCT(STRUCT(1 AS Order_Id, [3, 4] AS Item_Name) as holder)
	])
')
----
{'Order_Id': 2, 'Item_Name': [1, 2]}
{'Order_Id': 1, 'Item_Name': [3, 4]}

query I
SELECT * FROM bigquery_query('bq', '
    SELECT * FROM UNNEST([
        STRUCT(
            [
                STRUCT(10 AS Product_Id, ["Apple", "Banana"] AS Product_Names),
                STRUCT(20 AS Product_Id, ["Orange", "Mango"] AS Product_Names)
            ] AS Items
        ),
        STRUCT(
            [
                STRUCT(30 AS Product_Id, ["Carrot", "Peas"] AS Product_Names),
                STRUCT(40 AS Product_Id, ["Tomato", "Cucumber"] AS Product_Names)
            ] AS Items
        )
    ])
')
----
[{'Product_Id': 10, 'Product_Names': [Apple, Banana]}, {'Product_Id': 20, 'Product_Names': [Orange, Mango]}]
[{'Product_Id': 30, 'Product_Names': [Carrot, Peas]}, {'Product_Id': 40, 'Product_Names': [Tomato, Cucumber]}]

query II
SELECT * FROM bigquery_query('bq',
"SELECT * FROM UNNEST([
    STRUCT(
        [STRUCT(1 AS key, 'x' AS val), STRUCT(2 AS key, 'y' AS val)] AS struct_list,
        [10, 20, 30] AS int_list
    ),
    STRUCT(
        [STRUCT(3 AS key, 'z' AS val)] AS struct_list,
        [40, 50] AS int_list
    )
])"
)
----
[{'key': 1, 'val': x}, {'key': 2, 'val': y}]	[10, 20, 30]
[{'key': 3, 'val': z}]	[40, 50]

query I
SELECT * FROM bigquery_query('bq',
"SELECT * FROM UNNEST([
    STRUCT([
        STRUCT(1 AS id, [10,20] AS values),
        STRUCT(2 AS id, [30,40] AS values)
    ] AS list_of_structs)
])"
)
----
[{'id': 1, 'values': [10, 20]}, {'id': 2, 'values': [30, 40]}]

statement error
SELECT * FROM bigquery_query('bq',
"SELECT * FROM UNNEST([
    STRUCT([[1,2,3], [4,5,6]] AS nested_list),
    STRUCT([[7,8]] AS nested_list)
])"
)
----
Cannot construct array with element type ARRAY<INT64> because nested arrays are not supported at [2:13]

statement error
SELECT * FROM bigquery_query('bq',
"SELECT * FROM UNNEST([
    STRUCT([
        [STRUCT(1 AS a), STRUCT(2 AS a)],
        [STRUCT(3 AS a)]
    ] AS crazy_nested_list)
])"
)
----
Cannot construct array with element type ARRAY<STRUCT<a INT64>> because nested arrays are not supported at [3:9]

query I
SELECT * FROM bigquery_query('bq', '
	SELECT * FROM UNNEST([
		STRUCT([
			STRUCT(
				TRUE AS bool_col,
				42 AS int32_col,
				9223372036854775807 AS int64_col,
				3.14 AS float_col,
				2.718281828 AS double_col,
				"hello" AS string_col,
				DATE("2024-01-01") AS date_col,
				TIME(12, 34, 56) AS time_col,
				TIMESTAMP("2024-01-01 12:34:56 UTC") AS timestamp_col,
				INTERVAL 1 YEAR + INTERVAL 2 MONTH + INTERVAL 3 DAY + INTERVAL 4 HOUR + INTERVAL 5 MINUTE + INTERVAL 6 SECOND AS interval_col,
				NUMERIC "12345.6789" AS decimal128_col
			),
			STRUCT(
				FALSE AS bool_col,
				-100 AS int32_col,
				-9223372036854775808 AS int64_col,
				-1.23 AS float_col,
				-4.56 AS double_col,
				"world" AS string_col,
				DATE("1999-12-31") AS date_col,
				TIME(23, 59, 59) AS time_col,
				TIMESTAMP("1999-12-31 23:59:59 UTC") AS timestamp_col,
				INTERVAL -1 YEAR AS interval_col,
				NUMERIC "-12345.6789" AS decimal128_col
			)] AS complex_struct_list
		)
	])
')
----
[{'bool_col': true, 'int32_col': 42, 'int64_col': 9223372036854775807, 'float_col': 3.14, 'double_col': 2.7182817, 'string_col': hello, 'date_col': 2024-01-01, 'time_col': 12:34:56, 'timestamp_col': 2024-01-01 12:34:56, 'interval_col': 1 year 2 months 3 days 04:05:06, 'decimal128_col': 12345.678900000}, {'bool_col': false, 'int32_col': -100, 'int64_col': -9223372036854775808, 'float_col': -1.23, 'double_col': -4.56, 'string_col': world, 'date_col': 1999-12-31, 'time_col': 23:59:59, 'timestamp_col': 1999-12-31 23:59:59, 'interval_col': -1 year, 'decimal128_col': -12345.678900000}]

query IIIIIIIIIII
SELECT * FROM bigquery_query('bq', '
	SELECT * FROM UNNEST([
		STRUCT(
			[TRUE, FALSE, TRUE] AS bool_list,
			[1, 2, 3] AS int32_list,
			[9223372036854775807, -9223372036854775808] AS int64_list,
			[3.14, 2.71, 1.61] AS float_list,
			[2.718281828, 3.1415926535] AS double_list,
			["hello", "world"] AS string_list,
			[DATE("2024-01-01"), DATE("2023-12-31")] AS date_list,
			[TIME(12, 0, 0), TIME(13, 30, 30)] AS time_list,
			[TIMESTAMP("2024-01-01 12:00:00 UTC"), TIMESTAMP("2023-12-31 23:59:59 UTC")] AS timestamp_list,
			[
				INTERVAL 1 YEAR + INTERVAL 2 MONTH,
				INTERVAL 3 DAY + INTERVAL 4 HOUR
			] AS interval_list,
			[NUMERIC "123.45", NUMERIC "678.90"] AS decimal128_list
		)
	]);
')
----
[true, false, true]	[1, 2, 3]	[9223372036854775807, -9223372036854775808]	[3.14, 2.71, 1.61]	[2.7182817, 3.1415927]	[hello, world]	[2024-01-01, 2023-12-31]	[12:00:00, 13:30:30]	[2024-01-01 12:00:00, 2023-12-31 23:59:59]	[1 year 2 months, 3 days 04:00:00]	[123.450000000, 678.900000000]
