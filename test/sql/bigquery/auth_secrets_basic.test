# name: test/sql/bigquery/auth_secrets_basic.test
# description: Testing DuckDB secrets creation and authentication for BigQuery
# group: [bigquery]

require bigquery

require-env BQ_TEST_PROJECT

# Test 1: config provider - creation only
statement ok
CREATE SECRET test_config_secret (
    TYPE bigquery,
    PROVIDER config,
    SCOPE 'bigquery://${BQ_TEST_PROJECT}',
    project_id '${BQ_TEST_PROJECT}',
    key_id 'test@test.iam.gserviceaccount.com',
    secret 'test-key'
);

# Verify the secret was created
query I
SELECT COUNT(*) FROM duckdb_secrets() WHERE type = 'bigquery' AND name = 'test_config_secret';
----
1

# Verify the secret has the correct type and provider
query II
SELECT type, provider FROM duckdb_secrets() WHERE name = 'test_config_secret';
----
bigquery	config

# Clean up config secret
statement ok
DROP SECRET test_config_secret;

# Test 2: service_account provider - creation only
statement ok
CREATE SECRET test_sa_secret (
    TYPE bigquery,
    PROVIDER service_account,
    SCOPE 'bigquery://${BQ_TEST_PROJECT}',
    json '{"type":"service_account","project_id":"test","private_key":"test","client_email":"test@test.iam.gserviceaccount.com"}'
);

# Verify the service account secret was created
query I
SELECT COUNT(*) FROM duckdb_secrets() WHERE type = 'bigquery' AND name = 'test_sa_secret';
----
1

# Verify it has the correct provider
query II
SELECT type, provider FROM duckdb_secrets() WHERE name = 'test_sa_secret';
----
bigquery	service_account

# Clean up service account secret
statement ok
DROP SECRET test_sa_secret;

# Test 3: functional authentication with real credentials
require-env BQ_TEST_DATASET

require-env BQ_SERVICE_ACCOUNT_JSON

# Create a secret using the service account JSON from environment variable
statement ok
CREATE SECRET bq_functional_secret (
    TYPE bigquery,
    PROVIDER service_account,
    SCOPE 'bigquery://${BQ_TEST_PROJECT}',
    json '${BQ_SERVICE_ACCOUNT_JSON}'
);

# Verify the secret was created
query I
SELECT COUNT(*) FROM duckdb_secrets() WHERE type = 'bigquery' AND name = 'bq_functional_secret';
----
1

# Verify which secret will be used for this project
query I
SELECT COUNT(*) FROM which_secret('bigquery://${BQ_TEST_PROJECT}', 'bigquery') WHERE name = 'bq_functional_secret';
----
1

# Now attach to BigQuery using the secret (it should be automatically picked up)
statement ok
ATTACH 'project=${BQ_TEST_PROJECT} dataset=${BQ_TEST_DATASET}' AS bq (TYPE bigquery);

# Test that authentication works by listing tables
statement ok
SHOW ALL TABLES;

statement ok
DROP TABLE IF EXISTS bq.${BQ_TEST_DATASET}.table0;

statement ok
CREATE TABLE bq.test.table0 (id INT);

query I
SELECT * FROM bq.test.table0;
----

# Clean up
statement ok
DROP SECRET bq_functional_secret;

